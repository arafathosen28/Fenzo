@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --bg-start: #f8f9fa;
  --bg-end: #e9ecef;
  --glass-white: rgba(255, 255, 255, 0.7);
  --glass-border: rgba(255, 255, 255, 0.9);
  --accent: #6366f1;
  --text-primary: #1f2937;
  --text-secondary: #6b7280;
}

html, body {
  height: 100%;
  color-scheme: light;
}

body {
  @apply text-gray-900;
  background: linear-gradient(135deg, var(--bg-start) 0%, var(--bg-end) 100%);
  position: relative;
  color: var(--text-primary);
}

body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    radial-gradient(circle at 20% 30%, rgba(99, 102, 241, 0.08) 0%, transparent 50%),
    radial-gradient(circle at 80% 70%, rgba(167, 139, 250, 0.08) 0%, transparent 50%);
  pointer-events: none;
  z-index: 0;
}

/* Glass card with proper text color */
.glass {
  backdrop-filter: blur(16px) saturate(180%);
  background: var(--glass-white);
  border: 1px solid var(--glass-border);
  box-shadow: 
    0 8px 32px rgba(31, 38, 135, 0.15),
    inset 0 1px 0 rgba(255, 255, 255, 0.8);
  position: relative;
  color: var(--text-primary);
}

.glass::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  padding: 1px;
  background: linear-gradient(145deg, rgba(255,255,255,0.9), rgba(255,255,255,0.3));
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

/* Ensure all text inside glass elements is dark */
.glass * {
  color: inherit;
}

.glass h1, .glass h2, .glass h3, .glass h4, .glass h5, .glass h6 {
  color: var(--text-primary);
}

.glass p, .glass span, .glass div {
  color: var(--text-primary);
}

/* Button with proper text color */
.btn-glass {
  @apply rounded-full border-2 border-white/60 bg-white/40 backdrop-blur-md px-6 py-2.5 font-medium transition-all duration-300;
  box-shadow: 
    0 4px 15px rgba(99, 102, 241, 0.15),
    inset 0 1px 0 rgba(255, 255, 255, 0.6);
  color: var(--text-primary);
}

.btn-glass:hover {
  @apply -translate-y-0.5 bg-white/60 border-indigo-400/60;
  box-shadow: 
    0 8px 25px rgba(99, 102, 241, 0.25),
    inset 0 1px 0 rgba(255, 255, 255, 0.8);
  color: var(--accent);
}

.btn-glass:active {
  @apply translate-y-0;
}

/* Link with proper colors */
.link {
  @apply underline decoration-gray-400 underline-offset-4 transition-colors hover:decoration-indigo-500;
  color: var(--text-primary);
}

.link:hover {
  color: var(--accent);
}

/* Floating contact buttons */
.floating-contact {
  position: fixed;
  bottom: 24px;
  right: 24px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  z-index: 50;
}

.floating-btn {
  @apply w-14 h-14 rounded-full flex items-center justify-center transition-all duration-300 cursor-pointer;
  backdrop-filter: blur(16px) saturate(180%);
  background: rgba(255, 255, 255, 0.85);
  border: 1px solid rgba(255, 255, 255, 0.95);
  box-shadow: 
    0 8px 32px rgba(31, 38, 135, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.9);
  color: var(--text-primary);
}

.floating-btn:hover {
  @apply -translate-y-1 scale-110;
  box-shadow: 
    0 12px 40px rgba(99, 102, 241, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 1);
  color: var(--accent);
}

.floating-btn:active {
  @apply scale-105;
}

/* Icon colors inside floating buttons */
.floating-btn svg {
  color: currentColor;
}

/* Smooth scroll */
html {
  scroll-behavior: smooth;
}

/* Loading animation enhancement */
@keyframes shimmer {
  0% {
    background-position: -1000px 0;
  }
  100% {
    background-position: 1000px 0;
  }
}

.animate-pulse {
  animation: shimmer 2s infinite;
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0.5) 0%,
    rgba(255, 255, 255, 0.7) 50%,
    rgba(255, 255, 255, 0.5) 100%
  );
  background-size: 1000px 100%;
}

/* Additional text color utilities */
.text-primary {
  color: var(--text-primary);
}

.text-secondary {
  color: var(--text-secondary);
}

/* Ensure form inputs have proper text color */
input, textarea, select {
  color: var(--text-primary);
}

input::placeholder,
textarea::placeholder {
  color: var(--text-secondary);
}
